#pragma checksum "C:\scratch\projects\WebApp\main_portfolio\Pages\ReactWebStore.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "04353557c4e01f7e2720ba56dfbe1b3b4fb006a9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(razor_pages.Pages.Pages_ReactWebStore), @"mvc.1.0.razor-page", @"/Pages/ReactWebStore.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/ReactWebStore.cshtml", typeof(razor_pages.Pages.Pages_ReactWebStore), null)]
namespace razor_pages.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\scratch\projects\WebApp\main_portfolio\Pages\_ViewImports.cshtml"
using razor_pages;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"04353557c4e01f7e2720ba56dfbe1b3b4fb006a9", @"/Pages/ReactWebStore.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b0d45e63f997e68bd8ec1dfbd8cb9a4057c4fad5", @"/Pages/_ViewImports.cshtml")]
    public class Pages_ReactWebStore : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/RegularPics/githublogo.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Click Me to See Code"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("github logo"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("centerimg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/RegularPics/Live.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Click Me to See App live"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("Live logo"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(57, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 6 "C:\scratch\projects\WebApp\main_portfolio\Pages\ReactWebStore.cshtml"
  
    ViewData["Title"] = "React JS Webstore";


#line default
#line hidden
            BeginContext(114, 9201, true);
            WriteLiteral(@"
    <script>

        $(document).ready(function () {


            var $videoSrc;
            $('.video-btn').click(function () {
                $videoSrc = $(this).data(""src"");
            });
            console.log($videoSrc);




            $('#myModal').on('shown.bs.modal', function (e) {
                $('[data-toggle=""popover""]').popover('dispose')


                $(""#video"").attr('src', $videoSrc);
                $(""#video"").removeClass(""progressive__img progressive--not-loaded"").addClass(""progressive__img progressive--is-loaded"");

            })






            $('#myModal').on('hide.bs.modal', function (e) {

                $(""#video"").attr('src', $videoSrc);
                $('[data-toggle=""popover""]').popover()



            })



        });



    </script>



<div class=""text-right"">

    <h2 class=""display-4 mb-0"">Please see my React JS Webstore. </h2>

</div>


<div class=""text-center"">
    <h3 class=""blockquote-footer text-");
            WriteLiteral(@"right"">
        My application is now <a href=""https://reactwebstore.azurewebsites.net/""> live!!</a> 

    </h3><h1> Technical information:  </h1>
    <p>
        1) It has a React JS front end, an ASP.Net API for the back-end and it is connected to a SQL database hosted in Azure.
        Currently, it features various aspects from the Material UI Framework and Bootstrap.
    </p>
    <p>
        2) It is integrated with Stripe which is a 3rd party payment processor. Stripe can take a customer's credit card information and bill it with the order total without ever
        needing to touch confidential credit card information.
    </p>
    <p>
        3) Also, it uses Auth0 for authentication as a service. Auth0 helps me handle the complexity of authentication and authorization for my webstore. It helps me determine who is a valid user and who can access
        restricted parts of the website.
    </p>

    4) It makes various API calls to my API controllers to update, delete and insert recor");
            WriteLiteral(@"ds into the database.
    a) In terms of the back end, it keeps track of the
    items in the shopping cart by having a Shopping Cart header table to keep track of information regarding the session.
    Each item is entered in as its own separate row in the Shopping Cart line items table. The session ID is stored in the browser.
    This is used to match the right user to the cart when the user checks out. It collects information such as the name, email, billing information,
    delivery information and a token summarizing the credit card information. The token information is sent to Stripe for billing
    and then again the back end pre-populates the order header table with the customer's information and the order line table with the item ordered.
    <p>
        5) In terms of authentication. Auth0 uses JSON web tokens for the underlying mechanism to create access tokens. If the user does not provide a valid token in the header of the request,  it will be denied access
        to the Order history ");
            WriteLiteral(@"page and Account details page even with the correct HTTP Post data. Once a user logs in, he is able to view all orders he has placed under that account including the order date, billing/delivery information associated
        with the order and products tied to that order. Also, the logged-in user can view his account details page. Upon visiting this page, he can set his default information including his name and billing/delivery information.
        When he does checks out, that information can be pre-populated at check out if desired. This information will be stored in 3 tables. One table includes the name, email and flag needed to determine if the information
        should be pre-populated at check out. The other table contains the billing information. The 3rd table contains the delivery information.
    </p>




    <h1> Non-Technical information:  </h1>
    <p> My webstore has the following features: </p>
    <p> 1) View items and add items to your cart </p>
    <p> 2) View your shopping car");
            WriteLiteral(@"t and head to the checkout </p>
    <p> 3) Insert all your Billing, Delivery and credit card information before you check out </p>
    <p> 4) Check out and your payment information is sent to Stripe for billing</p>
    <p> 5) Create an account and log in </p>
    <p> 6) Once logged in, you can view your order history </p>
    <p> 6) Once logged in, you can set your default account information. Once this is set, that information can be used to prepopulate the checkout forms with your default checkout information </p>

    <p>
        If you would like to do a simulated checkout, please use 4242 4242 4242 4242 4242 42/42 424 as a test credit card in order to complete
        the checkout.
    </p>
    <p> *** If the application does not load after 10 seconds, please refresh the page ******* </p>

    <h1> Github Account Info:   </h1>
    <p> I have seperated my app into 2 folders. The front end folder will contain my React JS front end and the back end folder will contain my ASP.NET API endpoint. ");
            WriteLiteral(@"</p>

    Please click on the Github picture to see my code or my live picture to see the app live!!


</div>

<div data-toggle=""popover"" data-placement=""top"" data-content=""Click on me for full screen pop up!/Hover over me to pause the slides!"" data-trigger=""hover"">

    <div id=""carouselExampleIndicators"" class=""carousel slide"" data-ride=""carousel"">
        <ol class=""carousel-indicators"">
            <li data-target=""#carouselExampleIndicators"" data-slide-to=""0"" class=""active""></li>
            <li data-target=""#carouselExampleIndicators"" data-slide-to=""1""></li>
            <li data-target=""#carouselExampleIndicators"" data-slide-to=""2""></li>
        </ol>
        <div class=""carousel-inner"">
            <a class=""carousel-control-prev"" href=""#carouselExampleIndicators"" role=""button"" data-slide=""prev"">
                <span class=""carousel-control-prev-icon"" aria-hidden=""true""></span>
                <span class=""sr-only"">Previous</span>
            </a>
            <a class=""carousel-con");
            WriteLiteral(@"trol-next"" href=""#carouselExampleIndicators"" role=""button"" data-slide=""next"">
                <span class=""carousel-control-next-icon"" aria-hidden=""true""></span>
                <span class=""sr-only"">Next</span>
            </a>

            <div class=""carousel-item active"">

                <img class=""d-block w-100 video-btn"" src=""https://user-images.githubusercontent.com/47749320/72681349-8e943280-3a90-11ea-82ee-5d5fc709a226.gif"" alt=""First slide"" data-toggle=""modal"" data-src=""https://user-images.githubusercontent.com/47749320/72681349-8e943280-3a90-11ea-82ee-5d5fc709a226.gif"" data-target=""#myModal"">
                <div class=""carousel-caption d-none d-md-block"">
                    <p>This shows a user added items to the shopping cart, checking out and showing in the Strip payment portal that the payment when through </p>
                </div>
            </div>






            <div class=""carousel-item"">
                <img class=""d-block w-100 video-btn"" src=""https://user-images");
            WriteLiteral(@".githubusercontent.com/47749320/72681350-8e943280-3a90-11ea-87ce-1d5d6e754872.gif"" alt=""Second slide"" data-toggle=""modal"" data-src=""https://user-images.githubusercontent.com/47749320/72681350-8e943280-3a90-11ea-87ce-1d5d6e754872.gif"" data-target=""#myModal"">
                <div class=""carousel-caption d-none d-md-block"">

                    <p>This shows a user creating an account, logging in and showing in the Auth0 management portal that a user account was recently created</p>
                </div>

            </div>


            <!-- Modal -->
            <div class=""modal fade"" id=""myModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"" data-toggle=""modal"" data-src=""https://user-images.githubusercontent.com/47749320/55950653-67682500-5c23-11e9-8e6e-ebf1d3f30994.gif"" data-target=""#myModal"">
                <div class=""modal-dialog"" role=""document"">
                    <div class=""modal-content"">


                        <div class=""modal-body"">

   ");
            WriteLiteral(@"                         <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                <span aria-hidden=""true"">&times;</span>
                            </button>
                            <!-- 16:9 aspect ratio -->
                            <div class=""embed-responsive embed-responsive-16by9"">
                                <img class=""d-block w-100 video-btn embed-responsive-item"" id=""video"" src="""" alt=""Second slide"" data-toggle=""modal"" data-src=""https://user-images.githubusercontent.com/47749320/54579110-681ceb00-49d8-11e9-8ee5-3bbbb51d7c9f.gif"" data-target=""#myModal"">
                            </div>


                        </div>

                    </div>
                </div>
            </div>











        </div>

    </div>

</div>





<div class=""wrapper"">

    <div class=""ImgOverLaycontainer"">
        <a href=""https://github.com/dim505/ReactWebStore"" target=""_blank"">
            ");
            EndContext();
            BeginContext(9315, 105, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "04353557c4e01f7e2720ba56dfbe1b3b4fb006a915473", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9420, 292, true);
            WriteLiteral(@"
            <div class=""overlay"">
                <h1 class=""imgText""> Please Click Here to See My Code </h1>
            </div>
        </a>
    </div>


    <div class=""ImgOverLaycontainer"">
        <a href=""https://reactwebstore.azurewebsites.net/"" target=""_blank"">
            ");
            EndContext();
            BeginContext(9712, 101, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "04353557c4e01f7e2720ba56dfbe1b3b4fb006a917196", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9813, 186, true);
            WriteLiteral("\r\n            <div class=\"overlay\">\r\n                <h1 class=\"imgText\"> Please Click Here to See My Application Live </h1>\r\n            </div>\r\n        </a>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<MyApp.Namespace.ReactWebStoreModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<MyApp.Namespace.ReactWebStoreModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<MyApp.Namespace.ReactWebStoreModel>)PageContext?.ViewData;
        public MyApp.Namespace.ReactWebStoreModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
