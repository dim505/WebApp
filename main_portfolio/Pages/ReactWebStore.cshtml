@page
@model MyApp.Namespace.ReactWebStoreModel
@{
}

@{
    ViewData["Title"] = "React JS Webstore";

}

    <script>

        $(document).ready(function () {


            var $videoSrc;
            $('.video-btn').click(function () {
                $videoSrc = $(this).data("src");
            });
            console.log($videoSrc);




            $('#myModal').on('shown.bs.modal', function (e) {
                $('[data-toggle="popover"]').popover('dispose')


                $("#video").attr('src', $videoSrc);
                $("#video").removeClass("progressive__img progressive--not-loaded").addClass("progressive__img progressive--is-loaded");

            })






            $('#myModal').on('hide.bs.modal', function (e) {

                $("#video").attr('src', $videoSrc);
                $('[data-toggle="popover"]').popover()



            })








            $(".owl-carousel").owlCarousel({
                //keeps carousel automaticly playing upon load
                autoplay: true,
                //The number of items you want to see on the screen.
                items: 4,
                //centers picture works well with odd number of pictures
                center: true,
                //restartes carousel once it gets to last picture
                loop: true,
                //determines margin-right on picture
                margin: 10,
                // this Shows next/prev buttons
                nav: true,
                //hows the number of active pictures based on screen res. makes it responsive
                responsive: {
                    200: {
                        items: 1
                    },
                    800: {
                        items: 2
                    },

                    1000: {
                        items: 3
                    }

                }
            });

            //code to initialize the zoom in for the ams gallery
            $('.zoom-gallery').magnificPopup({
                // the selector for gallery item
                delegate: 'a',
                //specifies pop up type
                type: 'image',

                //puts close BTN in couner of page instead of near the picture
                closeBtnInside: false,
                //classes used for  CSS animation
                mainClass: 'mfp-with-zoom mfp-img-mobile',

                image: {
                    //Fits image in area vertically
                    verticalFit: true,
                    //gets title and displays it at botton of pic
                    titleSrc: function (item) {
                        //gets img title
                        return item.el.attr('title')
                    }
                },
                //gallery allows you yo switch the content of the popup and adds navigation arrows.
                gallery: {
                    //enables gallery option
                    enabled: true
                },
                //enables the zoom effect when pictures are clicked
                zoom: {
                    //enables zoom option
                    enabled: true,
                    //// duration of the effect, in milliseconds
                    duration: 300,
                    //looks for the img element to zoom into
                    opener: function (element) {
                        return element.find('img');
                    }
                }

            })

        });



    </script>


<div class="text-right">

    <h2 class="display-4 mb-0">Please see my React JS Webstore. </h2>

</div>


<div class="text-center">
    <h3 class="blockquote-footer text-right">
        My application is now <a href="https://reactwebstore.azurewebsites.net/"> live!!</a>

    </h3><h1> Technical information:  </h1>
    <p>
        1) It has a React JS front end, an ASP.Net API for the back-end and it is connected to a SQL database hosted in Azure.
        Currently, it features various aspects from the Material UI Framework and Bootstrap.
    </p>
    <p>
        2) It is integrated with Stripe which is a 3rd party payment processor. Stripe can take a customer's credit card information and bill it with the order total without ever
        needing to touch confidential credit card information.
    </p>
    <p>
        3) Also, it uses Auth0 for authentication as a service. Auth0 helps me handle the complexity of authentication and authorization for my webstore. It helps me determine who is a valid user and who can access
        restricted parts of the website.
    </p>

    4) It makes various API calls to my API controllers to update, delete and insert records into the database.
    a) In terms of the back end, it keeps track of the
    items in the shopping cart by having a Shopping Cart header table to keep track of information regarding the session.
    Each item is entered in as its own separate row in the Shopping Cart line items table. The session ID is stored in the browser.
    This is used to match the right user to the cart when the user checks out. It collects information such as the name, email, billing information,
    delivery information and a token summarizing the credit card information. The token information is sent to Stripe for billing
    and then again the back end pre-populates the order header table with the customer's information and the order line table with the item ordered.
    <p>
        5) In terms of authentication. Auth0 uses JSON web tokens for the underlying mechanism to create access tokens. If the user does not provide a valid token in the header of the request,  it will be denied access
        to the Order history page and Account details page even with the correct HTTP Post data. Once a user logs in, he is able to view all orders he has placed under that account including the order date, billing/delivery information associated
        with the order and products tied to that order. Also, the logged-in user can view his account details page. Upon visiting this page, he can set his default information including his name and billing/delivery information.
        When he does checks out, that information can be pre-populated at check out if desired. This information will be stored in 3 tables. One table includes the name, email and flag needed to determine if the information
        should be pre-populated at check out. The other table contains the billing information. The 3rd table contains the delivery information.
    </p>




    <h1> Non-Technical information:  </h1>
    <p> My webstore has the following features: </p>
    <p> 1) View items and add items to your cart </p>
    <p> 2) View your shopping cart and head to the checkout </p>
    <p> 3) Insert all your Billing, Delivery and credit card information before you check out </p>
    <p> 4) Check out and your payment information is sent to Stripe for billing</p>
    <p> 5) Create an account and log in </p>
    <p> 6) Once logged in, you can view your order history </p>
    <p> 6) Once logged in, you can set your default account information. Once this is set, that information can be used to prepopulate the checkout forms with your default checkout information </p>

    <p>
        If you would like to do a simulated checkout, please use 4242 4242 4242 4242 4242 42/42 424 as a test credit card in order to complete
        the checkout.
    </p>
    <p> *** If the application does not load after 10 seconds, please refresh the page ******* </p>

    <h1> Github Account Info:   </h1>
    <p> I have seperated my app into 2 folders. The front end folder will contain my React JS front end and the back end folder will contain my ASP.NET API endpoint. </p>

    Please click on the Github picture to see my code or my live picture to see the app live!!




    <div data-toggle="popover" data-placement="top" data-content="Click on me for full screen pop up!/Hover over me to pause the slides!" data-trigger="hover">

        <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
            <ol class="carousel-indicators">
                <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
                <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
                <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
            </ol>
            <div class="carousel-inner">
                <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>

                <div class="carousel-item active">

                    <img class="d-block w-100 video-btn" src="https://user-images.githubusercontent.com/47749320/72681349-8e943280-3a90-11ea-82ee-5d5fc709a226.gif" alt="First slide" data-toggle="modal" data-src="https://user-images.githubusercontent.com/47749320/72681349-8e943280-3a90-11ea-82ee-5d5fc709a226.gif" data-target="#myModal">
                    <div class="carousel-caption d-none d-md-block">
                        <p>This shows a user added items to the shopping cart, checking out and showing in the Strip payment portal that the payment when through </p>
                    </div>
                </div>






                <div class="carousel-item">
                    <img class="d-block w-100 video-btn" src="https://user-images.githubusercontent.com/47749320/72681350-8e943280-3a90-11ea-87ce-1d5d6e754872.gif" alt="Second slide" data-toggle="modal" data-src="https://user-images.githubusercontent.com/47749320/72681350-8e943280-3a90-11ea-87ce-1d5d6e754872.gif" data-target="#myModal">
                    <div class="carousel-caption d-none d-md-block">

                        <p>This shows a user creating an account, logging in and showing in the Auth0 management portal that a user account was recently created</p>
                    </div>

                </div>


                <!-- Modal -->
                <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" data-toggle="modal" data-src="https://user-images.githubusercontent.com/47749320/55950653-67682500-5c23-11e9-8e6e-ebf1d3f30994.gif" data-target="#myModal">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">


                            <div class="modal-body">

                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                                <!-- 16:9 aspect ratio -->
                                <div class="embed-responsive embed-responsive-16by9">
                                    <img class="d-block w-100 video-btn embed-responsive-item" id="video" src="" alt="Second slide" data-toggle="modal" data-src="https://user-images.githubusercontent.com/47749320/54579110-681ceb00-49d8-11e9-8ee5-3bbbb51d7c9f.gif" data-target="#myModal">
                                </div>


                            </div>

                        </div>
                    </div>
                </div>











            </div>

        </div>

    </div>

    <h1> Database Table Screenshots </h1>




</div>




<div class="ui-widget-content" data-toggle="popover" data-placement="top" data-content="CLICK ON ME!!" data-trigger="hover">
    <div class="zoom-gallery">

        <div class="owl-carousel owl-theme owl-loaded owl-drag">





            <div class="owl-stage-outer">
                <div class="owl-stage" style="transform: translate3d(-1806px, 0px, 0px); transition: all 0s ease 0s; width: 7226px;">


                    <div class="owl-item " style="width: 291.067px; margin-right: 10px;">
                        <div class="item">
                            <a href="~/WebstorePics/WebStoreDbTables3.PNG" title="These 3 tables belong to the Account Details Page. Each table corrsponds to a form. 
                            Table 1 (CustBillAddrInfo) gets the users billing information. *** Table 2 (PriAcctInfo) gets users contact information. *** Table 3 (CustDelivAddrInfo) gets the users Delivery address information. Auth0ID is the primary key">
                                <div><img src="~/WebstorePics/WebStoreDbTables3.PNG"> </div>
                            </a>

                        </div>
                    </div>

                    <div class="owl-item " style="width: 291.067px; margin-right: 10px;">
                        <div class="item">

                            <a href="~/WebstorePics/WebStoreDbTables2.PNG" title="The OrderHeader table stores information about the order after it is placed such as User name, billing, delivery address and who checked it out
                               whether is was a guest or Logged in user.***** OrderLines table contains information regarding the individual items ordered such as quantity. The session id is the foreign key that ties this
                               to the OrderHeader table. Its a 1 to many relationship.">
                                <div><img src="~/WebstorePics/WebStoreDbTables2.PNG"> </div>
                            </a>

                        </div>
                    </div>

                    <div class="owl-item " style="width: 291.067px; margin-right: 10px;">
                        <div class="item">

                            <a href="~/WebstorePics/WebStoreDbTables1.PNG" title="The Shopping Cart table contains the header information pertaining to the customers shopping cart. *** The CartLineItem table 
                               contains information about each individual item added to the cart. Session ID is the foreign key in this table. The relationship is 1 to many *** The Products table just 
                               contains information related to the products the webstore is selling such as price and image location">
                                <div><img src="~/WebstorePics/WebStoreDbTables1.PNG"> </div>
                            </a>


                        </div>
                    </div>


                </div>
            </div>


        </div>
    </div>




</div>


<div class="wrapper">

    <div class="ImgOverLaycontainer">
        <a href="https://github.com/dim505/ReactWebStore" target="_blank">
            <img src="~/RegularPics/githublogo.png" title="Click Me to See Code" alt="github logo" class="centerimg">
            <div class="overlay">
                <h1 class="imgText"> Please Click Here to See My Code </h1>
            </div>
        </a>
    </div>


    <div class="ImgOverLaycontainer">
        <a href="https://reactwebstore.azurewebsites.net/" target="_blank">
            <img src="~/RegularPics/Live.png" title="Click Me to See App live" alt="Live logo" class="centerimg">
            <div class="overlay">
                <h1 class="imgText"> Please Click Here to See My Application Live </h1>
            </div>
        </a>
    </div>
</div>



